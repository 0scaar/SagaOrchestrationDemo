// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SagaOrchestrationDemo.Infrastructure.Database;

namespace SagaOrchestrationDemo.Infrastructure.DataAccess.Entities.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("character(5)")
                        .IsFixedLength(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.HasKey("Id");

                    b.ToTable("Customer", "SagaDemo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f3c5a1e5-f16a-4a33-bb44-f12a2d70b65b"),
                            Code = "ALFKI",
                            Name = "Alfreds F."
                        },
                        new
                        {
                            Id = new Guid("62b03939-903f-4a0f-9e64-6f374ffd6a70"),
                            Code = "ANATR",
                            Name = "Ana Trujillo"
                        },
                        new
                        {
                            Id = new Guid("d8299406-cbb9-4495-bf67-2d62146eb04a"),
                            Code = "ANTON",
                            Name = "Antonio Moreno"
                        });
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uuid");

                    b.Property<double>("Discount")
                        .HasColumnType("double precision");

                    b.Property<int>("DiscountType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ShipAddress")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("character varying(60)");

                    b.Property<string>("ShipCity")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ShipCountry")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("ShipPostalCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("ShippingType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Order", "SagaDemo");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uuid");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(8, 2)
                        .HasColumnType("numeric(8,2)");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderDetail", "SagaDemo");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("character varying(40)");

                    b.Property<short>("Quantity")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("Product", "SagaDemo");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c27b1dfc-133f-4bbd-b7f2-f8785db0f619"),
                            Name = "Chai",
                            Quantity = (short)10
                        },
                        new
                        {
                            Id = new Guid("8944de08-89b7-40a2-9305-b931491806c4"),
                            Name = "Chang",
                            Quantity = (short)30
                        },
                        new
                        {
                            Id = new Guid("4f46e716-5764-45a6-b1dc-a79693e95914"),
                            Name = "Aniseed Syrup",
                            Quantity = (short)15
                        });
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Order", b =>
                {
                    b.HasOne("SagaOrchestrationDemo.Infrastructure.Database.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.OrderDetail", b =>
                {
                    b.HasOne("SagaOrchestrationDemo.Infrastructure.Database.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SagaOrchestrationDemo.Infrastructure.Database.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("SagaOrchestrationDemo.Infrastructure.Database.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
